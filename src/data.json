{
	"landingText": [
		"Graduating from University of British Columbia class of 2023",
		"Looking for new challenges and opportunities"
	],
	"projects": [
		{
			"title": "Image Repository",
			"type": "An AWS infrastructure & website to store and view images built"
		},
		{
			"title": "Modern Waiter",
			"type": "Android Restaurant Ordering System"
		},
		{
			"title": "SpellRise",
			"type": "Unity 2D Game"
		},
		{
			"title": "Chess Website",
			"type": "React Chess Website"
		},
		{
			"title": "Virtual Wardrobe",
			"type": "AR IOS Application"
		}
	],
	"blurb": "Nulla culpa et consequat commodo non amet voluptate aliquip id non cillum reprehenderit eu. Quis quis magna laboris aliquip excepteur anim pariatur dolor eiusmod. Reprehenderit do magna irure et.",
	"skills": [
		{
			"title": "Frontend Dev",
			"icon": "fas fa-laptop-code",
			"list": [
				"React",
				"HTML/CSS",
				"SASS/Tailwind"
			]
		},
		{
			"title": " Backend Dev",
			"icon": "fas fa-server",
			"list": [
				"Node/Express",
				"GraphQL",
				"SQL",
				"Redis"
			]
		},
		{
			"title": "Deployment",
			"icon": "fas fa-cogs",
			"list": [
				"AWS",
				"Docker",
				"Kubernetes",
				"Jenkins",
				"Helm Chart"
			]
		},
		{
			"title": "Game Dev",
			"icon": "fas fa-gamepad",
			"list": [
				"Unity",
				"C#",
				"C++"
			]
		}
	],
	"timeline": [
		{
			"date": "May, 2021",
			"data": {
				"company": "Safe Software",
				"job": "Software Developer Co-op",
				"description": " My team creates a React + GraphQL web application that displays the development, testing, and deployment information of each version's build of the Safe FME software. I design and implement GraphQL queries that aggregate data from different SQL databases and APIs and used the DataLoader library to batch parallel database queries and cache responses to Redis to reduce GraphQL query times by up to 90%. I also deployed a Lambda function to update the SQL database based on git commits using GitHub's webhooks. Moreover, I created an authentication microservice using JSON web tokens and Google login on Node.js to authenticate database writes and restrict administrator pages on the web application. And I implemented on a responsive React application that lets the development team search, modify, and filter for relevant internal data. Furthermore, I built a CI/CD pipeline with automated Jest and Cypress testing on Jenkins, building and pushing the container to Docker, and deploying a microservice cluster using Helm and Kubernetes in AWS EKS."
			}
		},
		{
			"date": "January, 2021",
			"data": {
				"company": "UBC Department of Computer and Electrical Engineering",
				"job": "Research Assistant",
				"description": "Setup and analyze testing simulation to measure the performance of machine learning computations on a Processing In Memory architecture (PIM)."
			}
		},
		{
			"date": "January, 2021",
			"data": {
				"company": "UBC Faculty of Forestry",
				"job": "Instructional Support",
				"description": " Created detailed guides and workshops regarding teaching technologies such as Canvas for the faculty and conducted surveys and analyzed responses on Qualtrics."
			}
		}
	]
}